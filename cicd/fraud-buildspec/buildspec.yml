version: 0.2
phases:
  install:
    runtime-versions:
      python: 3.12
  
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./services/fraud-detection-engine
      - docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
  
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      - docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
      - printf '{"ImageURI":"%s"}' $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG > imageDefinitions.json
      - printf '{"name":"fraud-detection","imageUri":"%s"}' $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG > imageDetail.json
      
artifacts:
  files:
    - imageDefinitions.json
    - imageDetail.json
    - ./cicd/fraud-appspec/appspec.yml
    - ./services/fraud-detection-engine/taskdef.json